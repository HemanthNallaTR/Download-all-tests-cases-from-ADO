name: Full Test Case Workflow

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Choose export depth: [essential] = Only ID, Title, Steps, Expected Results (4 columns) | [full] = All available test case fields (10+ columns)'
        required: true
        default: 'essential'
        type: choice
        options:
        - essential
        - full
      upload_to_arena:
        description: 'After downloading from Azure DevOps: [true] = Upload files to Open Arena Chain | [false] = Download only, no upload'
        required: true
        default: true
        type: boolean
      suite_range:
        description: 'Custom range: [empty] = Use default (1410044-1410100, 57 suites) | [start-end] = e.g. "1410044-1410050" for testing (7 suites)'
        required: false
        type: string
      tr_bearer_token:
        description: 'Bearer token: [empty] = Use repository secret | [token] = Override with your token from Open Arena Chain settings'
        required: true
        type: string
      tr_workspace_id:
        description: 'Workspace ID: [empty] = Use repository secret | [UUID] = Override with workspace ID from Open Arena Chain URL'
        required: false
        type: string
      delete_existing_files:
        description: 'Workspace cleanup: [true] = ‚ö†Ô∏è DELETE all existing files before upload | [false] = Keep existing files, add new ones'
        required: true
        default: false
        type: boolean
      upload_timeout:
        description: 'Upload timeout: [empty] = 300 seconds (5 min) | [number] = Custom seconds e.g. "600" for large files (10 min)'
        required: false
        default: '300'
        type: string
  schedule:
    # Run every day at 9 AM UTC (can be modified or disabled)
    - cron: '0 9 * * *'
  push:
    branches: [ main ]
    paths: 
      - 'config.py'
      - 'test_case_downloader.py'
      - 'open_arena_chain_uploader.py'

jobs:
  download-and-upload:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Display workflow inputs
      run: |
        Write-Host "üéØ Workflow Configuration:"
        Write-Host "=========================="
        Write-Host "Export Mode: ${{ github.event.inputs.mode || 'essential' }}"
        Write-Host "Upload to Arena: ${{ github.event.inputs.upload_to_arena || 'true' }}"
        Write-Host "Suite Range: ${{ github.event.inputs.suite_range || 'default (1410044-1410100)' }}"
        Write-Host "Delete Existing Files: ${{ github.event.inputs.delete_existing_files || 'false' }}"
        Write-Host "Upload Timeout: ${{ github.event.inputs.upload_timeout || '300' }} seconds"
        
        # Show token status without revealing values
        $hasBearerToken = '${{ github.event.inputs.tr_bearer_token }}' -ne ''
        $hasWorkspaceId = '${{ github.event.inputs.tr_workspace_id }}' -ne ''
        
        if ($hasBearerToken) {
          Write-Host "Bearer Token: Provided via input"
        } else {
          Write-Host "Bearer Token: Using repository secret"
        }
        
        if ($hasWorkspaceId) {
          Write-Host "Workspace ID: Provided via input"
        } else {
          Write-Host "Workspace ID: Using repository secret"
        }
        Write-Host ""

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate configuration
      run: |
        python validate_config.py
      env:
        AZURE_DEVOPS_ORG_URL: ${{ secrets.AZURE_DEVOPS_ORG_URL }}
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_DEFAULT_PROJECT: ${{ secrets.AZURE_DEVOPS_DEFAULT_PROJECT }}
        TR_BEARER_TOKEN: ${{ github.event.inputs.tr_bearer_token || secrets.TR_BEARER_TOKEN }}
        TR_WORKSPACE_ID: ${{ github.event.inputs.tr_workspace_id || secrets.TR_WORKSPACE_ID }}

    - name: Download test cases (Essential Mode)
      if: ${{ github.event.inputs.mode == 'essential' || github.event.inputs.mode == '' }}
      run: |
        python test_case_downloader.py --essential --output separate
      env:
        AZURE_DEVOPS_ORG_URL: ${{ secrets.AZURE_DEVOPS_ORG_URL }}
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_DEFAULT_PROJECT: ${{ secrets.AZURE_DEVOPS_DEFAULT_PROJECT }}

    - name: Download test cases (Full Mode)
      if: ${{ github.event.inputs.mode == 'full' }}
      run: |
        python test_case_downloader.py --full --output separate
      env:
        AZURE_DEVOPS_ORG_URL: ${{ secrets.AZURE_DEVOPS_ORG_URL }}
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_DEFAULT_PROJECT: ${{ secrets.AZURE_DEVOPS_DEFAULT_PROJECT }}

    - name: List downloaded files
      run: |
        Write-Host "üìÅ Downloaded files:"
        if (Test-Path "test_cases_by_suite") {
          Get-ChildItem "test_cases_by_suite" -Name | ForEach-Object { Write-Host "  - $_" }
          Write-Host ""
          Write-Host "üìä File count: $((Get-ChildItem "test_cases_by_suite" -File).Count) files"
          Write-Host "üìà Total size: $([math]::Round((Get-ChildItem "test_cases_by_suite" -File | Measure-Object -Property Length -Sum).Sum / 1MB, 2)) MB"
        } else {
          Write-Host "‚ùå test_cases_by_suite directory not found"
        }

    - name: Upload to Open Arena Chain
      if: ${{ github.event.inputs.upload_to_arena == 'true' || github.event.inputs.upload_to_arena == '' }}
      run: |
        # Set upload parameters based on inputs
        $deleteExisting = '${{ github.event.inputs.delete_existing_files }}' -eq 'true'
        $timeout = '${{ github.event.inputs.upload_timeout }}'
        if (-not $timeout) { $timeout = '300' }
        
        Write-Host "üîß Upload Configuration:"
        Write-Host "Delete existing files: $deleteExisting"
        Write-Host "Timeout: $timeout seconds"
        Write-Host ""
        
        # Run the uploader
        python open_arena_chain_uploader.py
      env:
        TR_BEARER_TOKEN: ${{ github.event.inputs.tr_bearer_token || secrets.TR_BEARER_TOKEN }}
        TR_WORKSPACE_ID: ${{ github.event.inputs.tr_workspace_id || secrets.TR_WORKSPACE_ID }}
        DELETE_EXISTING_FILES: ${{ github.event.inputs.delete_existing_files }}
        UPLOAD_TIMEOUT: ${{ github.event.inputs.upload_timeout || '300' }}

    - name: Archive test cases
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-cases-${{ github.event.inputs.mode || 'essential' }}-${{ github.run_number }}
        path: |
          test_cases_by_suite/
          *.log
        retention-days: 30

    - name: Cleanup sensitive logs
      if: always()
      run: |
        # Remove any potential sensitive information from logs
        if (Test-Path "*.log") {
          Get-ChildItem "*.log" | ForEach-Object {
            Write-Host "üßπ Cleaning sensitive data from $($_.Name)"
            # This is a placeholder - implement actual log cleaning if needed
          }
        }

    - name: Workflow summary
      if: always()
      run: |
        Write-Host "üéØ Workflow Summary"
        Write-Host "==================="
        Write-Host "Mode: ${{ github.event.inputs.mode || 'essential' }}"
        Write-Host "Upload to Arena: ${{ github.event.inputs.upload_to_arena || 'true' }}"
        Write-Host "Suite Range: ${{ github.event.inputs.suite_range || 'default' }}"
        Write-Host "Delete Existing Files: ${{ github.event.inputs.delete_existing_files || 'false' }}"
        Write-Host "Upload Timeout: ${{ github.event.inputs.upload_timeout || '300' }}s"
        Write-Host "Run ID: ${{ github.run_id }}"
        Write-Host "Run Number: ${{ github.run_number }}"
        if (Test-Path "test_cases_by_suite") {
          $fileCount = (Get-ChildItem "test_cases_by_suite" -File).Count
          Write-Host "Files generated: $fileCount"
        }
        Write-Host "Artifacts: test-cases-${{ github.event.inputs.mode || 'essential' }}-${{ github.run_number }}"
