name: Complete Test Case Workflow

on:
  workflow_dispatch:
    inputs:
      tr_bearer_token:
        description: 'TR Bearer Token (required for upload to Open Arena Chain)'
        required: false
        type: string
 
  push:
    branches: [ main ]
    paths: 
      - 'config.py'
      - 'test_case_downloader.py'
      - 'open_arena_chain_uploader.py'
      - 'automated_uploader.py'

jobs:
  test-case-workflow:
    runs-on: windows-latest
    
    env:
      # Set UTF-8 encoding for Unicode emoji support
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Display workflow configuration
      run: |
        Write-Host "üéØ Complete Test Case Workflow"
        Write-Host "=============================="
        Write-Host "This workflow will:"
        Write-Host "üìã Download test cases (essential mode - 4 columns)"
        Write-Host "üì§ Upload all files to Open Arena Chain"
        Write-Host "ÔøΩÔ∏è Delete existing files before upload"
        Write-Host "‚ö° Use optimized upload strategy"
        Write-Host ""

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate configuration
      run: |
        # Set UTF-8 encoding for Unicode emoji support
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        $env:PYTHONIOENCODING = "utf-8"
        
        python validate_config.py
      env:
        AZURE_DEVOPS_ORG_URL: ${{ secrets.AZURE_DEVOPS_ORG_URL }}
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_DEFAULT_PROJECT: ${{ secrets.AZURE_DEVOPS_DEFAULT_PROJECT }}
        TR_BEARER_TOKEN: ${{ github.event.inputs.tr_bearer_token || secrets.TR_BEARER_TOKEN }}
        TR_WORKSPACE_ID: ${{ secrets.TR_WORKSPACE_ID }}
    - name: Run Complete Workflow (Download + Upload)
      run: |
        # Set UTF-8 encoding for Unicode support
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        $env:PYTHONIOENCODING = "utf-8"
        
        Write-Host "üöÄ Running Complete Workflow (Download + Upload)"
        Write-Host "================================================="
        Write-Host "This will:"
        Write-Host "1. Download test cases (essential mode)"
        Write-Host "2. Upload all files to Open Arena Chain"
        Write-Host "3. Use default options (delete existing files, upload all)"
        Write-Host ""
        
        # Step 1: Download test cases
        Write-Host "üì• Step 1: Downloading test cases..."
        python test_case_downloader.py --mode essential --output separate
        
        # Step 2: Upload using automated uploader
        Write-Host "üì§ Step 2: Uploading to Open Arena Chain..."
        python automated_uploader.py
      env:
        AZURE_DEVOPS_ORG_URL: ${{ secrets.AZURE_DEVOPS_ORG_URL }}
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        AZURE_DEVOPS_DEFAULT_PROJECT: ${{ secrets.AZURE_DEVOPS_DEFAULT_PROJECT }}
        TR_BEARER_TOKEN: ${{ github.event.inputs.tr_bearer_token || secrets.TR_BEARER_TOKEN }}
        TR_WORKSPACE_ID: ${{ secrets.TR_WORKSPACE_ID }}

    - name: List downloaded files
      run: |
        Write-Host "üìÅ Downloaded files:"
        if (Test-Path "test_cases_by_suite") {
          Get-ChildItem "test_cases_by_suite" -Name | ForEach-Object { Write-Host "  - $_" }
          Write-Host ""
          Write-Host "üìä File count: $((Get-ChildItem "test_cases_by_suite" -File).Count) files"
          Write-Host "üìà Total size: $([math]::Round((Get-ChildItem "test_cases_by_suite" -File | Measure-Object -Property Length -Sum).Sum / 1MB, 2)) MB"
        } else {
          Write-Host "‚ùå test_cases_by_suite directory not found"
        }
    - name: Archive test cases
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-cases-complete-workflow-${{ github.run_number }}
        path: |
          test_cases_by_suite/
          *.log
        retention-days: 30

    - name: Cleanup sensitive logs
      if: always()
      run: |
        # Remove any potential sensitive information from logs
        if (Test-Path "*.log") {
          Get-ChildItem "*.log" | ForEach-Object {
            Write-Host "üßπ Cleaning sensitive data from $($_.Name)"
            # This is a placeholder - implement actual log cleaning if needed
          }
        }

    - name: Workflow summary
      if: always()
      run: |
        Write-Host "üéØ Complete Workflow Summary"
        Write-Host "============================"
        Write-Host "Workflow: Complete Test Case Download + Upload"
        Write-Host "Run ID: ${{ github.run_id }}"
        Write-Host "Run Number: ${{ github.run_number }}"
        if (Test-Path "test_cases_by_suite") {
          $fileCount = (Get-ChildItem "test_cases_by_suite" -File).Count
          Write-Host "Files generated: $fileCount"
        }
        Write-Host "Artifacts: test-cases-complete-workflow-${{ github.run_number }}"
        Write-Host "Result: Downloaded essential test case data and uploaded to Open Arena Chain"
